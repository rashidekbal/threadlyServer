create table otpmodel (phone varchar (255)  not null,
                      otp int  NOT NULL,
                     createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
                      flag boolean default false);



create table users (
  userid varchar (250) not null primary key,
  username Text not null,
  email text ,
  phone text ,
  pass text not null,
  bio text not null Default ("i am a gpgrammer"),
  profilepic text ,
  dob date not null,
  createdAt DATETIME not null default CURRENT_TIMESTAMP
);



create table imagepost (
postid int primary key auto_increment,
  userid varchar (250) not null,
  imageurl text  not null,
  caption text,
  created_at DateTime default current_timestamp,
  foreign key (userid) references users(userid)
  on update cascade 
  on delete cascade

);




create table post_likes (
  likeid int primary key auto_increment,
  userid varchar(250) not null,
  postid int not null,
  createdAt datetime default current_timestamp,
  foreign key (userid) references users(userid) 
  on update cascade 
  on delete cascade,
  foreign key (postid) references imagePost(postid)
  on update cascade 
  on delete cascade
  
);
create table post_shares (
  shareid int primary key auto_increment,
  sharerid varchar(250) not null,
  sharedto varchar (250) not null,
  postid int not null,
  createdAt datetime default current_timestamp,
  foreign key (sharerid) references users(userid) 
  on update cascade 
  on delete cascade,
  foreign key (sharedto) references users(userid) 
  on update cascade 
  on delete cascade,
  foreign key (postid) references imagePost(postid)
  on update cascade 
  on delete cascade
  
);


create table followers (
  followid int primary key auto_increment,
  followerid varchar(250) not null,
  followingid varchar(250) not null,
  createdAt datetime default current_timestamp,
  foreign key (followerid) references users(userid)
  on update cascade 
  on delete cascade,
  foreign key (followingid) references users(userid)
  on update cascade
  on delete cascade
);





create table post_comments (
  commentid int primary key auto_increment,
  userid varchar(250) not null,
  postid int not null,
  comment_text text not null,
  createdAt datetime default current_timestamp,
  foreign key (userid) references users(userid) 
  on update cascade 
  on delete cascade,
  foreign key (postid) references imagePost(postid)
  on update cascade 
  on delete cascade
  
);
create table if not exists comment_likes (
comment_like_id int primary key auto_increment,
  userid varchar(250) not null, 
  commentid int not null ,
  createdAt datetime default current_timestamp,
  foreign key (userid) references users(userid)  on update cascade on delete cascade,
  foreign key (commentid) references post_comments(commentid) on update cascade on delete cascade
)


























